name: Deploy to PaaS via Argo Workflow

on:
  issue_comment:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '/deploy-paas')
    steps:

      - name: Extract PR Command
        run: |
          COMMENT="${{ github.event.comment.body }}"
          echo "COMMAND=$COMMENT" >> $GITHUB_ENV

      - name: Check for Deploy Command
        run: |
          if [[ "$COMMAND" =~ /deploy-paas ]]; then
            echo "DEPLOY=true" >> $GITHUB_ENV
          else
            echo "DEPLOY=false" >> $GITHUB_ENV
          fi

      - name: Stop Execution if No Deploy Command
        if: env.DEPLOY == 'false'
        run: echo "No valid deploy command detected. Exiting..." && exit 1

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Argo CLI
        run: |
         ARGO_VERSION=$(curl --silent "https://api.github.com/repos/argoproj/argo-workflows/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
         curl -sLO https://github.com/argoproj/argo-workflows/releases/download/${ARGO_VERSION}/argo-linux-amd64
         chmod +x argo-linux-amd64
         sudo mv argo-linux-amd64 /usr/local/bin/argo
         argo version

      - name: Configure Kubeconfig for Minikube (Remote)
        run: |
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > kubeconfig.yaml
          export KUBECONFIG=$PWD/kubeconfig.yaml
          kubectl config current-context

      - name: Submit Argo Workflow
        run: |
          argo submit --namespace default --watch deploy-workflow.yaml
          